services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: laravel-product-catalog
        container_name: app
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
        networks:
            - laravel
        depends_on:
            - redis
        environment:
            REDIS_HOST: redis
            REDIS_PASSWORD: null
            REDIS_PORT: 6379

    webserver:
        image: nginx:alpine
        container_name: webserver
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www/html
            - ./docker/nginx:/etc/nginx/conf.d
        networks:
            - laravel

    db:
        image: mysql:8.0
        container_name: db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: laravel
            MYSQL_USER: laravel
            MYSQL_PASSWORD: secret
            MYSQL_ROOT_PASSWORD: secret
        volumes:
            - ./docker/mysql:/var/lib/mysql
        ports:
            - "3306:3306"
        networks:
            - laravel

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        restart: unless-stopped
        depends_on:
            - db
        environment:
            PMA_HOST: db
            PMA_USER: root
            PMA_PASSWORD: secret
        ports:
            - "8080:80"
        networks:
            - laravel
    redis:
        image: redis:alpine
        container_name: redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        volumes:
            - ./docker/redis:/data
        networks:
            - laravel
    horizon:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: horizon
        command: php artisan horizon
        restart: unless-stopped
        volumes:
            - ./:/var/www/html
        depends_on:
            - app
            - redis
        networks:
            - laravel

networks:
    laravel:
        driver: bridge
